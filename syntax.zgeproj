<?xml version="1.0" encoding="iso-8859-1" ?>
<ZApplication Name="App" Caption="Sublime Syntax" FileVersion="2" AndroidPackageName="com.txori.ZgeSublime">
  <OnLoaded>
    <ZLibrary Comment="ZLibrary test" HasInitializer="1">
      <Source>
<![CDATA[//
// storage.modifier
const int constInt = 16;
private int privateInt = 32;

// ZLibrary function
void functionVoid() {}
float functionFloat() { return 3.14; }
int functionInt() { return 64; }
string functionString() { return "hello"; }
model functionModel() { return ModelSphere; }
byte functionByte() { return 1; }
mat4 functionMat4() {
  mat4 m;
  m[0,0] = 1;
  m[1,1] = 1;
  m[2,2] = 1;
  m[3,3] = 1;
  return m;
}
vec2 functionVec2(float x, float y) {
  vec2 v;
  v.X = x;
  v.Y = y;
  return v;
}

class Rectangle {
  int width = 10;
  int height = this.width;

  int area() {
    return this.width * this.height;
  }

  void info() {
    trace("Rectangle; area=" + intToStr(this.area()));
  }
}

/*
 This is a multiline comment float varFloat debugFunction() !?
*/
void debugFunction(float varFloat, int varInt, string varString, model varModel, byte varByte, mat4 varMat4, vec2 varVec2, vec3 varVec3, vec4 varVec4, xptr varXptr) {
  float varFloatBis = varFloat;
  int varIntBis = varInt;
  string varStringBis = varString;
  model varModelBis = varModel;
  byte varByteBis = varByte;
  mat4 varMat4Bis = functionMat4();
  vec2 varVec2Bis = functionVec2(1, 1.5);
  vec3 varVec3Bis = varVec3;
  vec4 varVec4Bis = varVec4;
  xptr varXptrBis = varXptr;
}]]>
      </Source>
    </ZLibrary>
    <ZLibrary Comment="ZGE" HasInitializer="1">
      <Source>
<![CDATA[//
// defining constants
const int FALSE = 0, TRUE = 1;
const float PI2 = PI * 2;

// usage of constants
if(x > 22) flag = FALSE;
a = sin(CurrentModel.Rotation.Z * PI2);

CurrentModel.Position = Player.Position;
CurrentModel.Velocity.X = cos(Player.Rotation.Z * PI * 2) * BULLET_SPEED;
CurrentModel.Velocity.Y = sin(Player.Rotation.Z * PI * 2) * BULLET_SPEED;

if(PlayerScore > 0 && PlayerScore % 5000 == 0)
  PlayerLives += 1;

if( (App.Time > 30) && (PlayerLives < 2) ) {
  Difficulty *= 1.2;
  Speed *= 1.2;
}

if(CurrentModel.Position.Y > -30) {
  CurrentModel.Scale = 1.2 + sin(App.Time);
  ObjectColor.Color.R = rnd();
} else
  @RemoveModel();

switch(status) {
  case 0 :
  case 1 :
  case 2 :
    // when i is 0, 1 or 2
    doSomething();
    break;
  case 3 :
    // when i is 3
    doSomethingElse();
    break;
  default :
    //The default case when i is none of the above
}

while(i < 42) {
   if(i == 10)
     break;  //exit loop
   i++;
}

float max(float v1, float v2) {
  return v1 >= v2 ? v1 : v2;
}

float max3(float v1, float v2, float v3) {
  return max(max(v1, v2), v3);
}

// Separate r,g,b from color and return back to caller.
// Notice the "ref" word in front of the arguments that are passed by reference.
void splitColor(int color,ref int r, ref int g, ref int b) {
  r = color >> 16;
  g = color >> 8 & 0xFF;
  b = color & 0xFF;
}

// call this function
int r,g,b;
splitColor(0xff8020, r, g, b); // r == 255, g == 128, b == 32
]]>
      </Source>
    </ZLibrary>
    <SpawnModel Model="ModelSphere"/>
  </OnLoaded>
  <OnUpdate>
    <ZExpression Comment="Single line ZExpression" Expression="int test = 6;"/>
    <ZExpression Comment="Multi line ZExpression">
      <Expression>
<![CDATA[//
// storage.type
float varFloat = 3.14f;
int varInt = 64;
string varString = "hello string = 3";
model m = ModelSphere;
byte varByte = 1;
mat4 varMat4;
vec2 varVec2;
vec3 varVec3;
vec4 varVec4 = vector4(1,2,3,4);
xptr varXptr;

varVec3.X = 0;
varVec3.Y += 0.5;
//varVec3.Z *= 1;

// if else case break
if (App.RenderPasses > 1)
{
  while(CameraGame.Position.X == 0) {
    switch (App.CurrentRenderPass)
    {
      case 0: CameraGame.Position.X --; break; // Comment at the end of the line
      case 1: CameraGame.Position.X += 1; break;
    }
  }
} else CameraGame.Position.X = 0;]]>
      </Expression>
    </ZExpression>
  </OnUpdate>
  <Content>
    <Font Name="DinaFont" Bitmap="BitmapTest" FirstChar="32" CharPixelWidth="8" CharPixelHeight="16"/>
    <Bitmap Name="BitmapTest" Width="32" Height="32" Filter="1">
      <Producers>
        <BitmapFromFile Comment="Imported from bitmap.png" DataWidth="32" DataHeight="32">
          <BitmapFile>
<![CDATA[789CB5D0510980301485E15BC2008B6009DF8C21C6D018620C9F4C61040398C20B8331B639C7760EFCCF1F8763E436C50D72269B640F5A64B551F1763F8F97FB75F8263315FFF5EB3E77789D5F8E67FCF6E5191F851F32926EB178D207E2B18FC57D1FF879B9DF885B9FB45CBBA4A7E25F3E0A4FFA403CF6B178E0C371DF67E0CE27E18F74545CA3E2B18FC5031F8EFB3E03773E09B73E0FD7A878E0C371DF67E0DA0BA2DAFB9A]]>
          </BitmapFile>
        </BitmapFromFile>
        <BitmapExpression>
          <Expression>
<![CDATA[//X,Y : current coordinate (0..1)
//Pixel : current color (rgb)
//Sample expression: Pixel.R=abs(sin(X*16));
Pixel.G = X;
//Pixel.R = Y;]]>
          </Expression>
        </BitmapExpression>
      </Producers>
    </Bitmap>
    <Material Name="MaterialTest">
      <Textures>
        <MaterialTexture Texture="BitmapTest"/>
      </Textures>
    </Material>
    <Mesh Name="MeshSphere">
      <Producers>
        <MeshImport Comment="Bug: no gray color if CDATA length bigger than 16383" HasVertexColors="1">
          <MeshData>
<![CDATA[]]>
          </MeshData>
        </MeshImport>
        <MeshExpression VertexColors="255">
          <Expression>
<![CDATA[//V : current vertex
//N : current normal (turn off AutoNormals when modifying normals)
//C : current color (turn on VertexColors)
//TexCoord : current texture coordinate (turn on HasTexCoords)
C.R = V.Y;
C.B = -V.Y;]]>
          </Expression>
        </MeshExpression>
      </Producers>
    </Mesh>
    <Model Name="ModelSphere">
      <Comment>
<![CDATA[This is a multiline comment.
To see if it's working, even though I'm not sur how to spawn that in ZGameEditor.]]>
      </Comment>
      <OnRender>
        <UseMaterial Material="MaterialTest"/>
        <RenderMesh Mesh="MeshSphere"/>
      </OnRender>
    </Model>
    <Group Comment="Empty group"/>
  </Content>
</ZApplication>
